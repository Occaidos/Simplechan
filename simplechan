using System;

public class Simulator{
    const int READ= 10;
    const int WRITE = 11;
    const int LOAD = 20;
    const int STORE = 21;
    const int ADD = 30;
    const int SUBTRACT = 31;
    const int DIVIDE = 32;
    const int MULTIPLY = 33;
    const int BRANCH = 40;
    const int BRANCH_NEG = 41;
    const int BRANCH_ZERO = 42;
    const int HALT = 43;

    static int accumlator;
    static int instructionCounter;
    static int operand;
    static int operationCode;
    static int instructionRegister;

    static int[] memory;
    satic int index =0;

    public static void Main(string[] args){
        InitializeRegisters();

        PrintInstructions();
        LoadInstructions();

        Execute();
        Dump();
    }

    public static void InitializeRegisters(){
        memory = new int [100];
        accumlator = 0;
        instructionCounter = 0;
        instructionRegister = 0;
        operand = 0;
        operationCode = 0;
        for(int k = 0; k<memory.Length;k++){
            memory[k]=0;
        }
    }

    public static void PrintInstructions(){
        Console.Writeline("*** Welcome to Simpletron! ***");
        Console.Writeline("*** Please enter your program one instruction ***");
        Console.Writeline("*** (or data word) at a time into the input ***");
        Console.Writeline("*** text field. I will display the location ***");
        Console.Writeline("*** number and a question mark (?). You then ***");
        Console.Writeline("*** type the word for that location. Enter ***");
        Console.Writeline("*** -99999 to stop entering your program. ***");
    }

    public static void LoadInstructions(){
        Console.Write($"{index:D2}? ");
        int instruction = int.Parse(Console.ReadLine());

        while(instruction != -99999 && index< 100){
        

        }
    }
    public void Execute(){
        Console.WriteLine("*** Program execution begins ***");

        while (instructionCounter< index){
            instructionRegister = memory[instructionCounter];
            operationCode = instructionRegister / 100;
            operand = instructionRegister % 100;
            ++instructionCounter;

            switch(operationCode){
                case READ:
                    Console.Write("Enter an Integer: ");
                    memory[operand] = Convert.ToInt(Console.ReadLine());
                    break;
                case  WRITE:
                    break;
                case LOAD:
                    accumlator = memory[operand];
                    break;
                case STORE:
                    memory[operand] = accumlator;
                    break;
                case ADD:
                    accumlator+= memory[operand];
                    break;
                case SUBTRACT:
                    accumlator-= memory[operand];
                    break;
                case MULTIPLY:
                    break;
                case DIVIDE:
                    break;
                case BRANCH:
                    break;
                case BRANCH_NEG:
                    break;
                case BRANCH_ZERO:
                    break;
                case HALT:
                    Console.WriteLine("*** Simpletron execution terminated ***");
                    return;
                default:
                    Console.WriteLine("*** Fatal error. Operation code could not be identified. ***");
                    return;
            }
        
        }
    }
    public void Dump(){
        
    }
}
